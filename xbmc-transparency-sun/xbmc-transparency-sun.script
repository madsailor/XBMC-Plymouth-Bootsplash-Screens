win_width = Window.GetWidth();
win_height = Window.GetHeight();
ww_half = win_width / 2;
wh_half = win_height / 2;

offset = 40; //win_height / -4;
sun_offset = 0; //win_height /-4;
animation_offset = 35;

sourceImage = Image ("xbmc_black.png");
size_ratio = sourceImage.GetWidth() / win_width; // used later! todo: this is ugly
new_height = sourceImage.GetHeight() / size_ratio;
nh_half = new_height / 2;
scaledImage = sourceImage.Scale (win_width, new_height);
xbmcBlack.sprite = Sprite (scaledImage);
xbmcBlack.sprite.SetY (wh_half - nh_half + offset);
xbmcBlack.sprite.SetOpacity (1);

sourceImage = Image ("sun_glow.png");
new_height = sourceImage.GetHeight() / size_ratio;
nh_half = new_height / 2;
new_width = sourceImage.GetWidth() / size_ratio;
scaledImage = sourceImage.Scale (new_width, new_height); // todo: what if its not square ?
sunGlow.height = new_height;
sunGlow.width = new_width;
sunGlow.sprite = Sprite (scaledImage);
sunGlow.sprite.SetY (wh_half - nh_half +sun_offset);
sunGlow.sprite.SetOpacity (1);

sourceImage = Image ("transparency.png");
size_ratio = sourceImage.GetWidth() / win_width; // used later! todo: this is ugly
new_height = sourceImage.GetHeight() / size_ratio;
nh_half = new_height / 2;
scaledImage = sourceImage.Scale (win_width, new_height);
transparency.sprite = Sprite (scaledImage);
transparency.sprite.SetY (wh_half - nh_half + offset);
transparency.sprite.SetOpacity (1);


xbmcBlack.start = 0;
xbmcBlack.end = 0.5;

sunGlow.start = 0;
sunGlow.end = 0.4;
sunGlow.animStart = 0;
sunGlow.animEnd = 1.0;
sunGlow.endPos = ww_half - (sunGlow.width / 12) + animation_offset;
sunGlow.startPos = ww_half - sunGlow.width - (animation_offset * 2);

transparency.start = 0;
transparency.end = 0.5;

fun remap (val, imin, imax, omin, omax) {
    return (((val - imin) / (imax - imin)) * (omax - omin)) + omin;
}

fun progress_callback (d, p) {

    p = (p * 100.0) / 15.0;

    if (p >= xbmcBlack.start && p <= xbmcBlack.end) {
        a = remap (p, xbmcBlack.start, xbmcBlack.end, 0, 1);
        xbmcBlack.sprite.SetOpacity (a);
    }
    if (p >= sunGlow.start && p <= sunGlow.end) {
        a = remap (p, sunGlow.start, sunGlow.end, 0, 1);
        sunGlow.sprite.SetOpacity (a);
    }
    if (p >= sunGlow.animStart && p <= sunGlow.animEnd) {
        a = remap (p, sunGlow.animStart, sunGlow.animEnd, 0, 1);
        b = sunGlow.startPos - ((sunGlow.startPos - sunGlow.endPos) * a);
        sunGlow.sprite.SetX (b);
    }
    if (p >= transparency.start && p <= transparency.end) {
        a = remap (p, transparency.start, transparency.end, 0, 1);
        transparency.sprite.SetOpacity (a);
    }
    
}
Plymouth.SetBootProgressFunction(progress_callback);
