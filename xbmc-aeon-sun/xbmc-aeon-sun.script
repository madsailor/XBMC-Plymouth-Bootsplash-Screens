win_width = Window.GetWidth();
win_height = Window.GetHeight();
ww_half = win_width / 2;
wh_half = win_height / 2;

sunheight_offset = 0;

sourceImage = Image ("xbmc_black.png");
xbmc_width = sourceImage.GetWidth();
xbmc_height = sourceImage.GetHeight();
xbmc_scale = (win_height / (xbmc_height * 6));
newxbmc_width = xbmc_width * xbmc_scale;
newxbmc_height = xbmc_height * xbmc_scale;
scaledImage = sourceImage.Scale (newxbmc_width, newxbmc_height);
xbmcBlack.sprite = Sprite (scaledImage);
xbmcBlack.sprite.SetY (wh_half);
xbmcBlack.sprite.SetOpacity (1);

sourceImage = Image ("sun_glow.png");
sun_width = sourceImage.GetWidth();
sun_height = sourceImage.GetHeight();
sun_scale = (win_height / (sun_height * 12));
newsun_width = sun_width * sun_scale;
newsun_height = sun_height * sun_scale;
scaledImage = sourceImage.Scale (newsun_width, newsun_height);
sunGlow.sprite = Sprite (scaledImage);
sunGlow.sprite.SetY (wh_half + (newxbmc_height / 2) + sunheight_offset);
sunGlow.sprite.SetOpacity (1);

sourceImage = Image ("aeon.png");
aeon_width = sourceImage.GetWidth();
aeon_height = sourceImage.GetHeight();
aeon_scale = (win_height / (aeon_height * 10));
newaeon_width = aeon_width * aeon_scale;
newaeon_height = aeon_height * aeon_scale;
scaledImage = sourceImage.Scale (newaeon_width, newaeon_height);
aeon.sprite = Sprite (scaledImage);
aeon.sprite.SetX (ww_half + (ww_half / 2));
aeon.sprite.SetOpacity (1);

xbmcBlack.animStart = 0;
xbmcBlack.animEnd = 1;
xbmcBlack.startPos = win_width - (ww_half / 2);
xbmcBlack.endPos = ww_half - (newxbmc_width / 2); 

sunGlow.animStart = 0;
sunGlow.animEnd = 1;
sunGlow.startPos = (ww_half / 2);
sunGlow.endPos = ww_half + (newxbmc_width / 2) - (newsun_width / 2);

aeon.animStart = 0;
aeon.animEnd = 1;
aeon.startPos = wh_half;// + (wh_half / 2);
aeon.endPos = wh_half + (wh_half / 2);

fun remap (val, imin, imax, omin, omax) {
    return (((val - imin) / (imax - imin)) * (omax - omin)) + omin;
}

fun progress_callback (d, p) {

    p = (p * 100.0) / 15.0;

    if (p >= xbmcBlack.animStart && p <= xbmcBlack.animEnd) {
        a = remap (p, xbmcBlack.animStart, xbmcBlack.animEnd, 0, 1);
        b = xbmcBlack.startPos - ((xbmcBlack.startPos - xbmcBlack.endPos) * a);
        xbmcBlack.sprite.SetX (b);
    }
    if (p >= sunGlow.animStart && p <= sunGlow.animEnd) {
        a = remap (p, sunGlow.animStart, sunGlow.animEnd, 0, 1);
        b = sunGlow.startPos - ((sunGlow.startPos - sunGlow.endPos) * a);
        sunGlow.sprite.SetX (b);
    }
    if (p >= aeon.animStart && p <= aeon.animEnd) {
        a = remap (p, aeon.animStart, aeon.animEnd, 0, 1);
        b = aeon.startPos - ((aeon.startPos - aeon.endPos) * a);
        aeon.sprite.SetY (b);
    }
          
}
Plymouth.SetBootProgressFunction(progress_callback);
